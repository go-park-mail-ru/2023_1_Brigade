////////////package main
////////////
////////////import (
////////////	"image"
////////////	"image/color"
////////////	"image/png"
////////////	"math/rand"
////////////	"os"
////////////	"time"
////////////)
////////////
////////////func main() {
////////////	// Инициализируем генератор случайных чисел
////////////	rand.Seed(time.Now().UnixNano())
////////////
////////////	// Создаем новое изображение размером 200x200 пикселей
////////////	img := image.NewRGBA(image.Rect(0, 0, 200, 200))
////////////
////////////	// Заполняем фон случайным цветом
////////////	r := uint8(rand.Intn(256))
////////////	g := uint8(rand.Intn(256))
////////////	b := uint8(rand.Intn(256))
////////////	bgColor := color.RGBA{r, g, b, 255}
////////////	for x := 0; x < img.Bounds().Dx(); x++ {
////////////		for y := 0; y < img.Bounds().Dy(); y++ {
////////////			img.Set(x, y, bgColor)
////////////		}
////////////	}
////////////
////////////	//// Рисуем букву "A" посередине изображения
////////////	//a := image.NewUniform(color.White)
////////////	//aWidth := 40
////////////	//aHeight := 60
////////////	//aX := (img.Bounds().Dx() - aWidth) / 2
////////////	//aY := (img.Bounds().Dy() - aHeight) / 2
////////////	//for x := aX; x < aX+aWidth; x++ {
////////////	//	for y := aY; y < aY+aHeight; y++ {
////////////	//		img.Set(x, y, a)
////////////	//	}
////////////	//}
////////////
////////////	// Сохраняем изображение в файл
////////////	file, err := os.Create("image.png")
////////////	if err != nil {
////////////		panic(err)
////////////	}
////////////	defer file.Close()
////////////	png.Encode(file, img)
////////////}
//////////
//////////package main
//////////
//////////import (
//////////	"fmt"
//////////	"math/rand"
//////////	"time"
//////////
//////////	"github.com/fogleman/gg"
//////////)
//////////
//////////func main() {
//////////	// инициализируем генератор случайных чисел
//////////	rand.Seed(time.Now().UnixNano())
//////////
//////////	// загружаем шрифт
//////////	//font, err := truetype.Parse(goregular.TTF)
//////////	font, err := gg.LoadFontFace("Go-Mono.ttf", 96)
//////////	if err != nil {
//////////		panic(err)
//////////	}
//////////
//////////	// создаем изображение размером 256x256
//////////	dc := gg.NewContext(256, 256)
//////////
//////////	// генерируем случайную букву
//////////	letter := string('A' + rand.Intn(26))
//////////
//////////	// устанавливаем цвет заливки
//////////	dc.SetRGB(rand.Float64(), rand.Float64(), rand.Float64())
//////////
//////////	// заполняем изображение цветом
//////////	dc.Clear()
//////////
//////////	// выводим случайную букву на изображение
//////////	dc.SetFontFace(font)
//////////	dc.DrawStringAnchored("a", 56, 56, 2, 2)
//////////
//////////	// сохраняем изображение в файл
//////////	err = dc.SavePNG("output.png")
//////////	if err != nil {
//////////		panic(err)
//////////	}
//////////
//////////	fmt.Printf("Создано изображение с буквой %s\n", letter)
//////////}
//////////
////////////
////////////package main
////////////
////////////import (
////////////	"fmt"
////////////	"image"
////////////	"image/color"
////////////	"image/draw"
////////////	"math/rand"
////////////	"os"
////////////	"time"
////////////
////////////	"github.com/golang/freetype"
////////////	"github.com/golang/freetype/truetype"
////////////	"golang.org/x/image/font/gofont/goregular"
////////////	"golang.org/x/image/math/fixed"
////////////)
////////////
////////////func main() {
////////////	// создаем пустое изображение с белым фоном
////////////	img := image.NewRGBA(image.Rect(0, 0, 500, 500))
////////////	draw.Draw(img, img.Bounds(), &image.Uniform{color.White}, image.ZP, draw.Src)
////////////
////////////	// генерируем случайный фон
////////////	rand.Seed(time.Now().UnixNano())
////////////	for x := 0; x < 500; x++ {
////////////		for y := 0; y < 500; y++ {
////////////			r := uint8(rand.Intn(256))
////////////			g := uint8(rand.Intn(256))
////////////			b := uint8(rand.Intn(256))
////////////			img.Set(x, y, color.RGBA{r, g, b, 255})
////////////		}
////////////	}
////////////
////////////	// генерируем случайную букву и шрифт
////////////	letters := "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
////////////	letterIndex := rand.Intn(len(letters))
////////////	letter := letters[letterIndex : letterIndex+1]
////////////
////////////	fontSize := rand.Intn(300) + 100
////////////	fontBytes := goregular.TTF
////////////	font, err := freetype.ParseFont(fontBytes)
////////////	if err != nil {
////////////		fmt.Println("Ошибка чтения шрифта:", err)
////////////		return
////////////	}
////////////	fg := image.Black
////////////	dpi := 72.0
////////////	face := truetype.NewFace(font, &truetype.Options{Size: float64(fontSize), DPI: dpi, Hinting: font.HintingFull})
////////////	d := &font.Drawer{
////////////		Dst:  img,
////////////		Src:  fg,
////////////		Face: face,
////////////		Dot:  fixed.Point26_6{fixed.Int26_6((500-fontSize*3)/2) * 64, fixed.Int26_6((500+fontSize)/2) * 64},
////////////	}
////////////	d.DrawString(letter)
////////////
////////////	// сохраняем изображение в файл
////////////	f, err := os.Create("letter.png")
////////////	if err != nil {
////////////		fmt.Println("Ошибка создания файла:", err)
////////////		return
////////////	}
////////////	defer f.Close()
////////////	err = image.PNGEncode(f, img)
////////////	if err != nil {
////////////		fmt.Println("Ошибка сохранения файла:", err)
////////////		return
////////////	}
////////////
////////////	fmt.Printf("Сгенерирована буква '%s' на фоне случайных цветов и сохранена в файл 'letter.png'\n", letter)
////////////}
////////////
////////////package main
////////////
////////////import (
////////////	"github.com/golang/freetype/truetype"
////////////	"image"
////////////	"image/color"
////////////	"image/draw"
////////////	"image/jpeg"
////////////	"io/ioutil"
////////////	"math/rand"
////////////	"os"
////////////	"time"
////////////)
////////////
////////////func main() {
////////////	// Инициализируем генератор случайных чисел
////////////	rand.Seed(time.Now().UnixNano())
////////////
////////////	// Создаем изображение размером 200x200
////////////	img := image.NewRGBA(image.Rect(0, 0, 200, 200))
////////////
////////////	// Заполняем фон случайным цветом
////////////	draw.Draw(img, img.Bounds(), &image.Uniform{randomColor()}, image.ZP, draw.Src)
////////////
////////////	// Создаем новый контекст рисования
////////////	ctx := drawContext(img)
////////////
////////////	// Определяем шрифт и его размер
////////////	font, _ := loadFont("arial.ttf", 100)
////////////
////////////	// Выбираем случайную букву из английского алфавита
////////////	letter := randomLetter()
////////////
////////////	// Определяем координаты для размещения буквы по центру изображения
////////////	x := (img.Bounds().Dx() - font.Bounds(letter).Dx()) / 2
////////////	y := (img.Bounds().Dy() - font.Bounds(letter).Dy()) / 2
////////////
////////////	// Рисуем букву на изображении
////////////	ctx.SetFont(font)
////////////	ctx.SetFontSize(100)
////////////	ctx.SetSrc(image.White)
////////////	ctx.DrawString(string(letter), fixed(x), fixed(y))
////////////
////////////	// Сохраняем изображение в файл
////////////	file, _ := os.Create("image.jpg")
////////////	defer file.Close()
////////////	jpeg.Encode(file, img, nil)
////////////}
////////////
////////////// Возвращает случайный цвет
////////////func randomColor() color.Color {
////////////	return color.RGBA{
////////////		uint8(rand.Intn(256)),
////////////		uint8(rand.Intn(256)),
////////////		uint8(rand.Intn(256)),
////////////		255,
////////////	}
////////////}
////////////
////////////// Возвращает случайную букву из английского алфавита
////////////func randomLetter() rune {
////////////	return rune(rand.Intn(26) + 'A')
////////////}
////////////
////////////// Загружает шрифт из файла
////////////func loadFont(filename string, size float64) (*truetype.Font, error) {
////////////	fontBytes, err := ioutil.ReadFile(filename)
////////////	if err != nil {
////////////		return nil, err
////////////	}
////////////	font, err := truetype.Parse(fontBytes)
////////////	if err != nil {
////////////		return nil, err
////////////	}
////////////	return font, nil
////////////}
////////////
////////////// Возвращает контекст рисования для изображения
////////////func drawContext(img *image.RGBA) *draw2dimg.GraphicContext {
////////////	return draw2dimg.NewGraphicContext(img)
////////////}
////////////
////////////// Конвертирует координаты с плавающей точкой в целочисленные координаты
////////////func fixed(x float64) fixed.Point26_6 {
////////////	return fixed.I(int(x * 64))
////////////}
////////
////////package main
////////
////////import (
////////	"fmt"
////////	"image"
////////	"image/color"
////////	"image/png"
////////	"math/rand"
////////	"os"
////////	"time"
////////)
////////
////////func main() {
////////	// Инициализируем генератор случайных чисел
////////	rand.Seed(time.Now().UnixNano())
////////
////////	// Генерируем случайную букву
////////	//letter := rune(rand.Intn(26) + 'a')
////////
////////	// Создаем новое изображение размером 200x200 пикселей
////////	img := image.NewRGBA(image.Rect(0, 0, 200, 200))
////////
////////	// Заполняем фон случайным цветом
////////	r := uint8(rand.Intn(256))
////////	g := uint8(rand.Intn(256))
////////	b := uint8(rand.Intn(256))
////////	bgColor := color.RGBA{r, g, b, 255}
////////	for x := 0; x < img.Bounds().Dx(); x++ {
////////		for y := 0; y < img.Bounds().Dy(); y++ {
////////			img.Set(x, y, bgColor)
////////		}
////////	}
////////
////////	// Рисуем букву посередине изображения
////////	letterImg := image.NewUniform(color.White)
////////	letterWidth := 40
////////	letterHeight := 60
////////	letterX := (img.Bounds().Dx() - letterWidth) / 2
////////	letterY := (img.Bounds().Dy() - letterHeight) / 2
////////	for x := letterX; x < letterX+letterWidth; x++ {
////////		for y := letterY; y < letterY+letterHeight; y++ {
////////			if x < letterX+10 || x >= letterX+letterWidth-10 || y < letterY+10 || y >= letterY+letterHeight-10 {
////////				img.Set(x, y, letterImg)
////////			}
////////		}
////////	}
////////
////////	// Сохраняем изображение в файл
////////	fileName := fmt.Sprintf("image.png")
////////	file, err := os.Create(fileName)
////////	if err != nil {
////////		panic(err)
////////	}
////////	defer file.Close()
////////	png.Encode(file, img)
////////}
//////
//////package main
//////
//////import (
//////	"github.com/golang/freetype/truetype"
//////	"golang.org/x/image/font"
//////	"golang.org/x/image/font/gofont/goregular"
//////	"golang.org/x/image/font/sfnt"
//////	"golang.org/x/image/math/fixed"
//////	"image"
//////	"image/color"
//////	"image/draw"
//////	"image/png"
//////	"math/rand"
//////	"os"
//////)
//////
//////func generateImage() image.Image {
//////	// Создаем изображение
//////	img := image.NewRGBA(image.Rect(0, 0, 200, 100))
//////
//////	// Генерируем случайный цвет для буквы
//////	color := color.RGBA{uint8(rand.Intn(256)), uint8(rand.Intn(256)), uint8(rand.Intn(256)), 255}
//////
//////	// Генерируем случайную букву
//////	letter := rune(rand.Intn(26) + 'a')
//////
//////	// Загружаем шрифт
//////	font, err := sfnt.Parse(goregular.TTF)
//////	if err != nil {
//////		panic(err)
//////	}
//////
//////	// Рисуем букву на изображении
//////	draw.Draw(img, img.Bounds(), &image.Uniform{color}, image.Point{}, draw.Src)
//////	drawString(img, string(letter), 50, 50, color, font, 40)
//////
//////	return img
//////}
//////
//////func drawString(img *image.RGBA, s string, x, y int, c color.RGBA, f *sfnt.Font, size float64) {
//////	point := fixed.Point26_6{fixed.Int26_6(x * 64), fixed.Int26_6(y * 64)}
//////	d := &font.Drawer{
//////		Dst: img,
//////		Src: image.NewUniform(c),
//////		Face: truetype.NewFace(&truetype.Font{}, &truetype.Options{
//////			Size: size,
//////		}),
//////		Dot: point,
//////	}
//////	d.Dot.X -= d.MeasureString(s) / 2
//////	d.DrawString(s)
//////}
//////
////////func drawString(img *image.RGBA, s string, x, y int, c color.RGBA) {
////////	point := fixed.Point26_6{fixed.Int26_6(x * 64), fixed.Int26_6(y * 64)}
////////	d := &font.Drawer{
////////		Dst:  img,
////////		Src:  image.NewUniform(c),
////////		Face: basicfont.Face7x13,
////////		Dot:  point,
////////	}
////////	d.DrawString(s)
////////}
//////
//////func main() {
//////	// Генерируем изображение
//////	img := generateImage()
//////
//////	// Сохраняем изображение в файл
//////	file, err := os.Create("image.png")
//////	if err != nil {
//////		panic(err)
//////	}
//////	defer file.Close()
//////
//////	err = png.Encode(file, img)
//////	if err != nil {
//////		panic(err)
//////	}
//////}
////
////package main
////
////import (
////	"golang.org/x/image/font"
////	"golang.org/x/image/font/basicfont"
////	"golang.org/x/image/math/fixed"
////	"image"
////	"image/color"
////	"image/draw"
////	"image/png"
////	"math/rand"
////
////	"os"
////)
////
////// mask7x13 contains 96 6×13 glyphs in 7488 Pix bytes.
////var mask7x13 = &image.Alpha{
////	Stride: 6,
////	Rect:   image.Rectangle{Max: image.Point{6, 96 * 13}},
////	Pix: []byte{
////		// 0x20 ' '
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x21 '!'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x22 '"'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x23 '#'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x24 '$'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x25 '%'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0xff, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x26 '&'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x27 '\''
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x28 '('
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x29 ')'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x2a '*'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x2b '+'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x2c ','
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x2d '-'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x2e '.'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x2f '/'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x30 '0'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x31 '1'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x32 '2'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x33 '3'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x34 '4'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x35 '5'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x36 '6'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x37 '7'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x38 '8'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x39 '9'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x3a ':'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x3b ';'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x3c '<'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x3d '='
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x3e '>'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x3f '?'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x40 '@'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
////		0xff, 0x00, 0xff, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0xff, 0x00, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x41 'A'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x42 'B'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x43 'C'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x44 'D'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x45 'E'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x46 'F'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x47 'G'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0xff, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x48 'H'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x49 'I'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x4a 'J'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x4b 'K'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0xff, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x4c 'L'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x4d 'M'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
////		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
////		0xff, 0x00, 0xff, 0xff, 0x00, 0xff,
////		0xff, 0x00, 0xff, 0xff, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x4e 'N'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0xff, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x4f 'O'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x50 'P'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x51 'Q'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0xff, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x52 'R'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x53 'S'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x54 'T'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x55 'U'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x56 'V'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x57 'W'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0xff, 0xff, 0x00, 0xff,
////		0xff, 0x00, 0xff, 0xff, 0x00, 0xff,
////		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
////		0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x58 'X'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x59 'Y'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x5a 'Z'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x5b '['
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x5c '\\'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x5d ']'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x5e '^'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x5f '_'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x60 '`'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x61 'a'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x62 'b'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x63 'c'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x64 'd'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x65 'e'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x66 'f'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x67 'g'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////
////		// 0x68 'h'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x69 'i'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x6a 'j'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////
////		// 0x6b 'k'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x6c 'l'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x6d 'm'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x6e 'n'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x6f 'o'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x70 'p'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x71 'q'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////
////		// 0x72 'r'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x73 's'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x74 't'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x75 'u'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x76 'v'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x77 'w'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0x00, 0xff, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x78 'x'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x79 'y'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0xff, 0x00, 0x00, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
////
////		// 0x7a 'z'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
////		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x7b '{'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x7c '|'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x7d '}'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
////		0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// 0x7e '~'
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0x00, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0x00, 0x00, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////
////		// U+FFFD REPLACEMENT CHARACTER
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0xff, 0xff, 0x00, 0xff, 0xff,
////		0x00, 0xff, 0x00, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0x00, 0xff,
////		0x00, 0xff, 0xff, 0x00, 0xff, 0xff,
////		0x00, 0xff, 0xff, 0x00, 0xff, 0xff,
////		0x00, 0xff, 0xff, 0xff, 0xff, 0xff,
////		0x00, 0xff, 0xff, 0x00, 0xff, 0xff,
////		0x00, 0x00, 0xff, 0xff, 0xff, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////		0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
////	},
////}
////
////func generateImage() image.Image {
////	// Создаем изображение
////	img := image.NewRGBA(image.Rect(0, 0, 200, 100))
////
////	// Генерируем случайный цвет для буквы
////	color1 := color.RGBA{uint8(rand.Intn(256)), uint8(rand.Intn(256)), uint8(rand.Intn(256)), 255}
////	color2 := color.RGBA{uint8(255), uint8(255), uint8(255), 255}
////
////	// Генерируем случайную букву
////	letter := rune(rand.Intn(26) + 'a')
////
////	// Рисуем букву на изображении
////	draw.Draw(img, img.Bounds(), &image.Uniform{color1}, image.Point{}, draw.Src)
////	drawString(img, string(letter), 50, 50, color2)
////
////	return img
////}
////
////func drawString(img *image.RGBA, s string, x, y int, c color.RGBA) {
////	point := fixed.Point26_6{fixed.Int26_6(x * 100), fixed.Int26_6(y * 20)}
////	d := &font.Drawer{
////		Dst: img,
////		Src: image.NewUniform(c),
////		//Face: &basicfont.Face7x13,
////		Face: &basicfont.Face{
////			Advance: 7,
////			Width:   6,
////			Height:  13,
////			Ascent:  11,
////			Descent: 2,
////			Mask:    mask7x13,
////			Ranges: []basicfont.Range{
////				{'\u0020', '\u007f', 0},
////				{'\ufffd', '\ufffe', 95},
////			},
////		},
////		Dot: point,
////	}
////	d.DrawString(s)
////}
////
////func main() {
////	// Генерируем изображение
////	img := generateImage()
////
////	// Сохраняем изображение в файл
////	file, err := os.Create("image.png")
////	if err != nil {
////		panic(err)
////	}
////	defer file.Close()
////
////	err = png.Encode(file, img)
////	if err != nil {
////		panic(err)
////	}
////}
//
//package main
//
//import (
//	"golang.org/x/image/font"
//	"golang.org/x/image/font/basicfont"
//	"golang.org/x/image/math/fixed"
//	"image"
//	"image/color"
//	"image/png"
//	"math/rand"
//	"os"
//)
//
//func addLabel(img *image.RGBA, x, y int, label string) {
//	col := color.RGBA{200, 100, 0, 255}
//	point := fixed.Point26_6{fixed.I(x), fixed.I(y)}
//
//	d := &font.Drawer{
//		Dst:  img,
//		Src:  image.NewUniform(col),
//		Face: basicfont.Face7x13,
//		Dot:  point,
//	}
//	d.DrawString(label)
//}
//
//func main() {
//	img := image.NewRGBA(image.Rect(0, 0, 300, 100))
//	color1 := color.RGBA{uint8(rand.Intn(256)), uint8(rand.Intn(256)), uint8(rand.Intn(256)), 255}
//
//	// Рисуем букву на изображении
//	//draw.Draw(img, img.Bounds(), &image.Uniform{color1}, image.Point{}, draw.Src)
//	//img.SetRGBA(0, 0, color1)
//	img.Set(0, 0, color1)
//	addLabel(img, 20, 30, "Hello Go")
//
//	f, err := os.Create("hello-go.png")
//	if err != nil {
//		panic(err)
//	}
//	defer f.Close()
//	if err := png.Encode(f, img); err != nil {
//		panic(err)
//	}
//}

package main

import (
	"github.com/fogleman/gg"
	"image"
	"image/color"
	"image/draw"
	"image/png"
	"log"
	"math/rand"
	"os"
)

func main() {

	img := image.NewRGBA(image.Rect(0, 0, 1024, 1024))

	color := color.RGBA{uint8(rand.Intn(256)), uint8(rand.Intn(256)), uint8(rand.Intn(256)), 255}

	draw.Draw(img, img.Bounds(), &image.Uniform{color}, image.Point{}, draw.Src)

	f, err := os.Create("background.png")
	if err != nil {
		panic(err)
	}
	defer f.Close()
	if err := png.Encode(f, img); err != nil {
		panic(err)
	}

	const S = 1024
	im, err := gg.LoadImage("background.png")
	if err != nil {
		log.Fatal(err)
	}

	dc := gg.NewContext(S, S)
	dc.SetRGB(1, 1, 1)
	dc.Clear()
	dc.SetRGB(1, 1, 1)
	if err := dc.LoadFontFace("Go-Mono.ttf", 728); err != nil {
		panic(err)
	}

	dc.DrawRoundedRectangle(0, 0, 512, 512, 0)
	dc.DrawImage(im, 0, 0)
	dc.DrawStringAnchored("S", S/2, S/2, 0.5, 0.5)
	dc.Clip()
	dc.SavePNG("out.png")
}
