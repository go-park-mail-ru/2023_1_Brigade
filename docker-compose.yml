version: "3.9"

services:
  backend:
    build: .
    depends_on:
      - postgres
      - redis
      - kafka
 #     - minio
    volumes:
      - /home/ubuntu/avatars:/avatars
    ports:
      - "8081:8081"
    networks:
      - backend-network

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: "brigade"
      POSTGRES_USER: "brigade"
      POSTGRES_PASSWORD: "123"
    ports:
      - "5432:5432"
    volumes:
      - ./db/001_init_up.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --replica-read-only no
    networks:
      - backend-network

#  redis:
#    image: redis
 #   container_name: redis
 #   ports:
 #     - "6379:6379"
 #   build: .
 #   volumes:
 #     - ./redis.conf:/usr/local/etc/redis/redis.conf
 #   command: redis-server /usr/local/etc/redis/redis.conf
 #   networks:
 #     - backend-network

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - backend-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - backend-network

#  minio:
#    hostname: minio
#    container_name: minio
#    image: quay.io/minio/minio:RELEASE.2023-03-22T06-36-24Z
#    command: server --console-address ":9099" /data
#    volumes:
#      - ~/minio/data:/data
#    restart: always
#    ports:
#      - "9000:9000"
#      - "9099:9099"
#    environment:
#      MINIO_ROOT_USER: minio
#      MINIO_ROOT_PASSWORD: minio123
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#    networks:
#      - backend-network

networks:
  backend-network:
    name: "backend-network"
    driver: bridge

#volumes:
#  minio-data:
